name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Testing
  test-backend:
    runs-on: ubuntu-latest
    name: Test Backend

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: npm ci
      working-directory: backend

    - name: Run TypeScript compilation
      run: npx tsc --noEmit
      working-directory: backend

    - name: Run backend tests
      run: npm test
      working-directory: backend

    - name: Generate backend test coverage
      run: npm test -- --coverage
      working-directory: backend

    - name: Upload backend coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

  # Build Backend
  build-backend:
    runs-on: ubuntu-latest
    name: Build Backend
    needs: test-backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: npm ci
      working-directory: backend

    - name: Build backend
      run: npm run build
      working-directory: backend

    - name: Archive backend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/dist/
