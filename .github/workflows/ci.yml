name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Backend Testing and Building
  backend:
    runs-on: ubuntu-latest
    name: Backend - Build & Test

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Run unit tests
        run: npm test

      - name: Generate test coverage
        run: npm test -- --coverage

      - name: Upload coverage reports to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          directory: ./backend/coverage
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive backend build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/dist/

  # Frontend Building and Linting
  frontend:
    runs-on: ubuntu-latest
    name: Frontend - Build & Lint

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Check TypeScript compilation
        run: npx tsc --noEmit

      - name: Archive frontend build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  # Security Audit
  security:
    runs-on: ubuntu-latest
    name: Security Audit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Audit backend dependencies
        working-directory: ./backend
        run: |
          npm ci
          npm audit --audit-level=moderate

      - name: Audit frontend dependencies
        working-directory: ./frontend
        run: |
          npm ci
          npm audit --audit-level=moderate

  # Build Summary
  build-summary:
    runs-on: ubuntu-latest
    name: Build Summary
    needs: [backend, frontend, security]
    if: always()

    steps:
      - name: Check job results
        run: |
          echo "Backend job status: ${{ needs.backend.result }}"
          echo "Frontend job status: ${{ needs.frontend.result }}"
          echo "Security job status: ${{ needs.security.result }}"

          if [[ "${{ needs.backend.result }}" == "failure" || "${{ needs.frontend.result }}" == "failure" || "${{ needs.security.result }}" == "failure" ]]; then
            echo "❌ One or more jobs failed"
            exit 1
          else
            echo "✅ All jobs completed successfully"
          fi
